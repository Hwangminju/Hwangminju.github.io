{"version":3,"file":"js/723.503c8613.js","mappings":"2OAESA,MAAM,a,GACDA,MAAM,e,UAC0DC,EAAAA,EAAAA,GAAoB,YAAd,WAAO,K,UAMjFA,EAAAA,EAAAA,GAAiB,YAAX,QAAI,K,GAEND,MAAM,e,UACgEC,EAAAA,EAAAA,GAAoB,YAAd,WAAO,K,UAI3FA,EAAAA,EAAAA,GAIM,OAJDD,MAAM,kBAAgB,EACzBC,EAAAA,EAAAA,GAAgB,SAAb,cACHA,EAAAA,EAAAA,GAAoB,SAAjB,kBACHA,EAAAA,EAAAA,GAAmB,SAAhB,kBAHL,K,sGAhBJC,EAAAA,EAAAA,IAyBU,iBAxBRD,EAAAA,EAAAA,GAaM,MAbN,EAaM,EAZJA,EAAAA,EAAAA,GAES,SAFT,EAES,EADPE,EAAAA,EAAAA,IAAsEC,EAAA,CAAlDC,KAAM,CAAC,KAAM,QAASL,MAAM,sBAAsBM,KAExEL,EAAAA,EAAAA,GAKS,UALDD,MAAM,WAAYO,QAAK,oBAAEC,EAAAA,UAAAA,EAAAA,YAAAA,KAAjC,EACEL,EAAAA,EAAAA,IAE8BC,EAAA,CAD3BC,KAAM,CAAC,MAAO,eACfL,MAAM,sBACNS,KAEJR,EAAAA,EAAAA,GAES,SAFT,EAES,EADPE,EAAAA,EAAAA,IAA4EC,EAAA,CAAxDC,KAAM,CAAC,KAAM,cAAeL,MAAM,sBAAsBU,OAGhFT,EAAAA,EAAAA,GASM,YARJU,GAKAV,EAAAA,EAAAA,GAEM,aADJE,EAAAA,EAAAA,IAAWS,S,yCAWnB,GAAeC,EAAAA,EAAAA,IAAgB,CAC7BC,WAAY,CACVC,SAASC,EAAAA,EAAAA,KAAqB,IAAM,iCAEtCC,MAAO,CACLC,iBAAkBC,QAEpBC,MAAMH,GACJ,MAAMI,GAAQC,EAAAA,EAAAA,MACdD,EAAME,OAAO,gBAEb,MAAMC,EAAWC,UACfJ,EAAME,OAAO,sBACPG,IAAAA,KAEF,8CAAgDT,EAAMC,iBAAmB,QACzE,CACES,SAAUN,EAAMO,QAAQC,YACxBC,SAAUT,EAAMO,QAAQG,YACxBC,MAAOX,EAAMO,QAAQK,cACrBC,KAAMb,EAAMO,QAAQO,eACpBC,SAAUf,EAAMO,QAAQS,YACxBC,SAAUjB,EAAMO,QAAQW,aAE1B,CACEC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,8BAA+B,IAC/BC,cAAe,UAAYC,aAAaC,QAAQ,YAIrDC,MAAKC,IACJ,GAAmB,MAAfA,EAAIC,OAAgB,CACtB,IAAIC,EAAOF,EAAIE,KACfC,QAAQC,IAAIF,GAEZ3B,EAAME,OAAO,eACbF,EAAME,OAAO,gBAEb4B,EAAAA,EAAAA,KAAY,CAACC,KAAM,oBAGtBC,OAAMC,IACLjC,EAAME,OAAO,eACb0B,QAAQC,IAAI,WAAYI,EAAMC,UAE9BlC,EAAME,OAAO,mBAGjBF,EAAME,OAAO,gBAGf,MAAO,CACLC,SAAAA,M,QClFN,MAAMgC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF","sources":["webpack://dev-faker/./src/components/data/DataBody.vue","webpack://dev-faker/./src/components/data/DataBody.vue?a273"],"sourcesContent":["<template>\n  <section>\n    <div class=\"btn-group\">\n      <button class=\"add-row-btn\">\n        <font-awesome-icon :icon=\"['fa', 'plus']\" class=\"font-awesome-icon\" /><span>Add Row</span>\n      </button>\n      <button class=\"save-btn\" @click=\"saveData\">\n        <font-awesome-icon \n          :icon=\"['far', 'floppy-disk']\" \n          class=\"font-awesome-icon\" />\n          <span>Save</span>\n      </button>\n      <button class=\"preview-btn\">\n        <font-awesome-icon :icon=\"['fa', 'align-left']\" class=\"font-awesome-icon\" /><span>Preview</span>\n      </button>\n    </div>\n    <div>\n      <div class=\"data-grid-head\">\n        <p>Data Type</p>\n        <p>Data Key Name</p>\n        <p>Data Options</p>\n      </div>\n      <div>\n        <DataRow />\n      </div>\n    </div>\n  </section>\n</template>\n<script>\nimport { defineComponent, defineAsyncComponent, /*ref*/ } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nimport router from \"@/router\";\n\nexport default defineComponent({\n  components: {\n    DataRow: defineAsyncComponent(() => import('@/components/data/DataRow.vue')),\n  },\n  props: {\n    projectNamespace: String\n  },\n  setup(props) {\n    const store = useStore();\n    store.commit('initDataInfo');\n\n    const saveData = async () => {\n      store.commit('startLoading');\n      await axios\n        .post(\n          'https://dev-faker-be.herokuapp.com/project/' + props.projectNamespace + '/data', \n          {\n            dataType: store.getters.getDataType,\n            dataRows: store.getters.getDataRows,\n            array: store.getters.getArrayCheck,\n            list: store.getters.getDataRowList,\n            dataName: store.getters.getDataName,\n            dataPath: store.getters.getDataPath\n          },\n          {\n            headers: {\n              accept: 'application/json',\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': '*',\n              Authorization: 'Bearer ' + localStorage.getItem(\"token\"),\n            },\n          }\n        )\n        .then(res => {\n          if (res.status === 200) {\n            let data = res.data;\n            console.log(data);\n            // spinner 로딩 중지\n            store.commit('stopLoading');\n            store.commit('initDataInfo');\n\n            router.push({name: 'ProjectList'});\n          }\n        })\n        .catch(error => {\n          store.commit('stopLoading');\n          console.log('error ->', error.response);\n\n          store.commit('initDataInfo');\n        });\n      \n      store.commit('stopLoading');\n    };\n\n    return {\n      saveData\n    }\n  }\n});\n</script>\n<style lang=\"scss\" scoped>\nsection {\n  .btn-group {\n    display: flex;\n    justify-content: flex-end;\n    padding-bottom: 2rem;\n\n    button {\n      padding: 0.325rem 1.5rem;\n      // color: #fff;\n      color: #374151;\n      border: 1px solid #6b7280;\n      font-size: 0.875rem;\n      border-radius: 0.25rem;\n      margin-right: 0.5rem;\n\n      &:hover {\n        background: #6b7280;\n        color: #fff;\n      }\n\n      .font-awesome-icon {\n        margin-right: 0.5rem;\n      }\n    }\n  }\n  .data-grid-head {\n    display: grid;\n    grid-template-columns: 250px 250px 1fr;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid #ccc;\n\n    p {\n      padding-left: 1rem;\n    }\n  }\n}\n</style>\n","import { render } from \"./DataBody.vue?vue&type=template&id=3af1c754&scoped=true\"\nimport script from \"./DataBody.vue?vue&type=script&lang=js\"\nexport * from \"./DataBody.vue?vue&type=script&lang=js\"\n\nimport \"./DataBody.vue?vue&type=style&index=0&id=3af1c754&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/hwangminju/Documents/Dev-Faker-Caravan/faker-fe/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3af1c754\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_font_awesome_icon","icon","_hoisted_3","onClick","_ctx","_hoisted_4","_hoisted_6","_hoisted_7","_component_DataRow","defineComponent","components","DataRow","defineAsyncComponent","props","projectNamespace","String","setup","store","useStore","commit","saveData","async","axios","dataType","getters","getDataType","dataRows","getDataRows","array","getArrayCheck","list","getDataRowList","dataName","getDataName","dataPath","getDataPath","headers","accept","Authorization","localStorage","getItem","then","res","status","data","console","log","router","name","catch","error","response","__exports__","render"],"sourceRoot":""}